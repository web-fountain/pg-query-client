@layer layouts {
  /* Modern screen dimension calculation */
  @property --screenWidth {
    syntax: '<length>';
    inherits: true;
    initial-value: 100vw;
  }
  @property --screenHeight {
    syntax: '<length>';
    inherits: true;
    initial-value: 100vh;
  }

  :root {
    /* Screen dimensions as unitless numbers */
    --screen-width: tan(atan2(var(--screenWidth), 1px));
    --screen-height: tan(atan2(var(--screenHeight), 1px));

    /* Layout constants - Fixed heights/widths */
    --titlebar-height:  36px;  /* Titlebar with padding */
    --bottombar-height: 22px;  /* Bottombar status bar */

    /* Panel constraints */
    --panel-min-width:        200px; /* Minimum panel width */
    --panel-max-width:        600px; /* Maximum panel width */
    --panel-collapsed-width:  48px;  /* Collapsed panel width */
    --minPanelWidth:          200px; /* Reduced to allow side resizing */

    /* Calculated available space */
    --available-height: calc(var(--screen-height) * 1px - var(--titlebar-height) - var(--bottombar-height));
    --available-width: calc(var(--screen-width) * 1px);

    /* AIDEV-NOTE: OpSpace layout defaults for static grid; JS will override as user resizes */
    --op-space-layout-left-panel-width:   300px;
    --op-space-layout-right-panel-width:  300px;
    --op-space-layout-panel-min-width:    170px;
    --op-space-layout-panel-max-width:    600px;
    --op-space-layout-resizer-width:      4px;
  }

  /* AIDEV-NOTE: container queries for component-driven layouts */
  .container {
    container-type: inline-size;
    container-name: content;
  }

  @container content (min-width: 48rem) {
    /* AIDEV-TODO: enhance component layouts at container >= 48rem */
  }
}
